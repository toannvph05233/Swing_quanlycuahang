/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.QuanLy;

import Interface.BanHang.jpThucDon;
import Interface.Run;
import Models.HangSanXuat;
import Models.MauSac;
import Models.TinhNang;
import Models.KhoangGia;
import Models.SanPham;
import Mysql.ConnectSQL;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LONG
 */
public class Jp_QLSanPham extends javax.swing.JPanel {
    ConnectSQL cn = new ConnectSQL();
    
    /**
     * Creates new form Jp_QLSanPham
     */
    public static Jp_QLSanPham sp;
    public Jp_QLSanPham() {
        sp = this;
        initComponents();
        Fillcbb();
//        Fillcbb1();
//        Fillcbb2();
//        Fillcbb3();
//        Fillcbb4();
        FillTable(null);
    }
    public void Fillcbb() {
        Vector Vcbb = cn.GetNhomHangSanXuat();

       if (Vcbb != null) {
            System.out.println(Vcbb);
            DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel(Vcbb);
            cbbNhomHangSanXuat.setModel(cbbmodel);
        } else {
            JOptionPane.showMessageDialog(null, "Không có nhóm nào !");
        }
    }    
    
//    public void Fillcbb1() {
//        Vector Vcbb1 = cn.GetNhomMauSac();
//
//        if (Vcbb1 != null) {
////            System.out.println(Vcbb1);
//            DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel(Vcbb1);
//            cbbMauSac.setModel(cbbmodel);
//        } else {
//            JOptionPane.showMessageDialog(null, "Không có màu nào !");
//        }
//    }  
//    
//    public void Fillcbb2() {
//        Vector Vcbb2 = cn.GetNhomKieuDang();
//
//        if (Vcbb2 != null) {
////            System.out.println(Vcbb2);
//            DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel(Vcbb2);
//            cbbKieuDang.setModel(cbbmodel);
//        } else {
//            JOptionPane.showMessageDialog(null, "Không có kiểu dáng nào !");
//        }
//    }
//
//    public void Fillcbb3() {
//        Vector Vcbb3 = cn.GetNhomTinhNang();
//
//        if (Vcbb3 != null) {
//            System.out.println(Vcbb3);
//            DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel(Vcbb3);
//            cbbTinhNang.setModel(cbbmodel);
//        } else {
//            JOptionPane.showMessageDialog(null, "Không có tính năng nào !");
//        }
//    }    
    
//    public void Fillcbb4() {
//        Vector Vcbb4 = cn.GetNhomKhoangGia();
//
//        if (Vcbb4 != null) {
//            System.out.println(Vcbb4);
//            DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel(Vcbb4);
//            cbbKhoangGia.setModel(cbbmodel);
//        } else {
//            JOptionPane.showMessageDialog(null, "Không có khoảng giá nào !");
//        }
//    }    
    
    
    
    public void FillTable(String nhom) {
        ArrayList<SanPham> arrTable = cn.GetSanPham(nhom);
        DefaultTableModel tbmodel = new DefaultTableModel();

        tbmodel.addColumn("Mã sản phẩm");
        tbmodel.addColumn("Tên sản phẩm");
        tbmodel.addColumn("Mã Hãng sản xuất");
        tbmodel.addColumn("Mã Màu sắc");
        tbmodel.addColumn(" Mã Kiểu dáng");
        tbmodel.addColumn("Mã Tính năng");
        tbmodel.addColumn("Mã Khoảng giá");
        tbmodel.addColumn("Đơn giá");
        tbmodel.addColumn("ĐVT");

        if (arrTable != null) {
            int sosanpham = 0;
            for (SanPham sp : arrTable) {
                sosanpham++;
                tbmodel.addRow(new Object[]{sp.GetMaSanPham(), sp.GetTenSanPham(), sp.GetMaHangSanXuat(), sp.GetMaMauSac(), sp.GetMaKieuDang(), sp.GetMaTinhNang(), sp.GetMaKhoangGia(), sp.GetDonGia(), sp.GetDVT()});
            }
            lblthongtin.setText(String.valueOf(sosanpham)+" sản phẩm");

        } else {
            JOptionPane.showMessageDialog(null, "Không có sản phẩm !");
        }
        tbSanPham.setModel(tbmodel);
        for(int i = 0; i < tbSanPham.getColumnCount();i++){
            Class<?> col = tbSanPham.getColumnClass(i);
            tbSanPham.setDefaultEditor(col, null);
        }        
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        bntThem = new javax.swing.JButton();
        cbbNhomHangSanXuat = new javax.swing.JComboBox<>();
        txttim = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bntSua = new javax.swing.JButton();
        bntXoa = new javax.swing.JButton();
        lblthongtin = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        tbSanPham.setForeground(new java.awt.Color(51, 0, 51));
        tbSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbSanPham);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 0));
        jLabel1.setText("Hãng:");

        bntThem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bntThem.setForeground(new java.awt.Color(51, 0, 51));
        bntThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/file_add.png"))); // NOI18N
        bntThem.setText("Thêm");
        bntThem.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        bntThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bntThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntThemActionPerformed(evt);
            }
        });

        cbbNhomHangSanXuat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbNhomHangSanXuat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbNhomHangSanXuatItemStateChanged(evt);
            }
        });
        cbbNhomHangSanXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbNhomHangSanXuatActionPerformed(evt);
            }
        });

        txttim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttimKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Tìm sản phẩm:");

        bntSua.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bntSua.setForeground(new java.awt.Color(51, 0, 51));
        bntSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/document_edit.png"))); // NOI18N
        bntSua.setText("Sửa");
        bntSua.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        bntSua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bntSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSuaActionPerformed(evt);
            }
        });

        bntXoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bntXoa.setForeground(new java.awt.Color(51, 0, 51));
        bntXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/file_delete.png"))); // NOI18N
        bntXoa.setText("Xóa");
        bntXoa.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        bntXoa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bntXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntXoaActionPerformed(evt);
            }
        });

        lblthongtin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblthongtin.setForeground(new java.awt.Color(153, 0, 0));
        lblthongtin.setText("Total");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 51));
        jLabel2.setText("Tổng số sản phẩm:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblthongtin, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(cbbNhomHangSanXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txttim, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bntThem, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntSua, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbbNhomHangSanXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bntThem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bntSua, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bntXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblthongtin)
                    .addComponent(jLabel2)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSanPhamMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbSanPhamMouseClicked

    private void bntThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntThemActionPerformed
        Dl_Them_San_Pham sp = new Dl_Them_San_Pham(Run.QlCafe, true);
        sp.setVisible(true);
    }//GEN-LAST:event_bntThemActionPerformed

    private void bntSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSuaActionPerformed
        int select=tbSanPham.getSelectedRow();
        if(select<0){
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn sản phẩm nào !");
        }else{
            String masanpham = (String) tbSanPham.getValueAt(select, 0);
            Dl_Sua_San_Pham sua = new Dl_Sua_San_Pham(Run.QlCafe, true, masanpham);
            sua.setVisible(true);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_bntSuaActionPerformed

    private void bntXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntXoaActionPerformed
        int[] selectedRows = tbSanPham.getSelectedRows();

        if (selectedRows.length <= 0) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn sản phẩm nào !");
        } else {
            ArrayList<String> ListMaSanPham = new ArrayList<String>();
            String sp = "";
            for (int i : selectedRows) {
                String ma = (String) tbSanPham.getValueAt(i, 0);
                ListMaSanPham.add(ma);
                String tenban = (String) tbSanPham.getValueAt(i, 1);

                sp += tenban + "\n";
            }
            int qs;
            qs = JOptionPane.showConfirmDialog(null, "Xóa sản phẩm: \n " + sp, "Xóa sản phẩm", JOptionPane.YES_NO_OPTION);
            if (qs == JOptionPane.YES_OPTION) {
                boolean xoa = cn.DeleteSanPham(ListMaSanPham);
                if (xoa == true) {
                    FillTable(null);
                    try{
                        jpThucDon.td.FillLoai();
                        jpThucDon.td.updateUI();
                    }catch(Exception e){

                    }
                }else
                    JOptionPane.showMessageDialog(null, "Không xóa được món !");
            }
        }
    }//GEN-LAST:event_bntXoaActionPerformed

    private void txttimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttimKeyReleased
        
        ArrayList<SanPham> arrTable = cn.SearchSanPham(txttim.getText());
        if(arrTable != null){
            DefaultTableModel tbmodel = new DefaultTableModel();

            tbmodel.addColumn("Mã sản phẩm");
            tbmodel.addColumn("Tên sản phẩm");
            tbmodel.addColumn("Mã hsx");
            tbmodel.addColumn("Màu sắc");
            tbmodel.addColumn("Kiểu dáng");
            tbmodel.addColumn("Tính năng");
            tbmodel.addColumn("Khoảng giá");
            tbmodel.addColumn("Đơn giá");
            tbmodel.addColumn("ĐVT");

            int sosanpham = 0;
            for (SanPham td : arrTable) {
                sosanpham++;
                tbmodel.addRow(new Object[]{td.GetMaSanPham(), td.GetTenSanPham(), td.GetMaHangSanXuat(), td.GetMaMauSac(), td.GetMaKieuDang(), td.GetMaTinhNang(), td.GetMaKhoangGia(), td.GetDonGia(), td.GetDVT()});
                lblthongtin.setText(String.valueOf(sosanpham)+" sản phẩm");
            }
            tbSanPham.setModel(tbmodel);
            for(int i = 0; i < tbSanPham.getColumnCount();i++){
                Class<?> col = tbSanPham.getColumnClass(i);
                tbSanPham.setDefaultEditor(col, null);
            }
        }
    }//GEN-LAST:event_txttimKeyReleased

    private void cbbNhomHangSanXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbNhomHangSanXuatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbNhomHangSanXuatActionPerformed

    private void cbbNhomHangSanXuatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbNhomHangSanXuatItemStateChanged
        HangSanXuat selected = (HangSanXuat) cbbNhomHangSanXuat.getSelectedItem();
        FillTable(selected.GetMaHangSanXuat());
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbNhomHangSanXuatItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntSua;
    private javax.swing.JButton bntThem;
    private javax.swing.JButton bntXoa;
    private javax.swing.JComboBox<String> cbbNhomHangSanXuat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblthongtin;
    private javax.swing.JTable tbSanPham;
    private javax.swing.JTextField txttim;
    // End of variables declaration//GEN-END:variables
}
